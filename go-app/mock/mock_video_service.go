// Code generated by MockGen. DO NOT EDIT.
// Source: service/video_service.go

// Package mock is a generated GoMock package.
package mock

import (
	model "go-app/model"
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
)

// MockIVideoService is a mock of IVideoService interface.
type MockIVideoService struct {
	ctrl     *gomock.Controller
	recorder *MockIVideoServiceMockRecorder
}

// MockIVideoServiceMockRecorder is the mock recorder for MockIVideoService.
type MockIVideoServiceMockRecorder struct {
	mock *MockIVideoService
}

// NewMockIVideoService creates a new mock instance.
func NewMockIVideoService(ctrl *gomock.Controller) *MockIVideoService {
	mock := &MockIVideoService{ctrl: ctrl}
	mock.recorder = &MockIVideoServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockIVideoService) EXPECT() *MockIVideoServiceMockRecorder {
	return m.recorder
}

// Videos mocks base method.
func (m *MockIVideoService) Videos() (model.Videos, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Videos")
	ret0, _ := ret[0].(model.Videos)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Videos indicates an expected call of Videos.
func (mr *MockIVideoServiceMockRecorder) Videos() *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Videos", reflect.TypeOf((*MockIVideoService)(nil).Videos))
}
